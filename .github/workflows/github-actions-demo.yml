name: FastVideoDSEncoderLinux
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
on:
  release:
    types: [created]
jobs:
  Build_FastVideoDSEncoder_for_Linux:
    runs-on: ubuntu-latest
    container: debian
    steps:
      #- run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      #- run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      #- run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Show github event info
        run: cat $GITHUB_EVENT_PATH
      #- run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      #- run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: Install build deps
        run: |
          apt update
          yes | apt install wget
          wget https://packages.microsoft.com/config/debian/11/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
          dpkg -i packages-microsoft-prod.deb
          rm packages-microsoft-prod.deb
          apt update
          yes | apt install gcc g++ nasm yasm git pkg-config make cmake ninja-build meson autoconf libtool bzip2 libz-dev dotnet-sdk-6.0 jq curl
      - name: build pkgtools
        run: ./build.sh pkgtools
      - name: build ffmpeg shared libs
        run: ./build.sh ffmpeg
      - name: build FastVideoDSEncoder
        run: ./build.sh FastVideoDSEncoder
      - name: test and upload
        run: |
          ./build/FastVideoDSEncoder
          ID=$(jq --raw-output '.release.id' $GITHUB_EVENT_PATH)
          AUTH_HEADER="Authorization: token ${{ secrets.GITHUB_TOKEN }}"
          CONTENT_LENGTH="Content-Length: $(stat -c%s build/FastVideoDSEncoder)"
          CONTENT_TYPE="Content-Type:  application/x-elf"
          UPLOAD_URL="https://uploads.github.com/repos/${{ github.repository }}/releases/$ID/assets?name=FastVideoDSEncoder"
          curl -XPOST -H "$AUTH_HEADER" -H "$CONTENT_LENGTH" -H "$CONTENT_TYPE" --upload-file "build/FastVideoDSEncoder" "$UPLOAD_URL" 
      - run: echo "üçè This job's status is ${{ job.status }}."
